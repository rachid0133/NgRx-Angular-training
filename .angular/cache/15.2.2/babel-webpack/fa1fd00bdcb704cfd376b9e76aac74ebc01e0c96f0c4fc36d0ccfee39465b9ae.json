{"ast":null,"code":"let initialState = {\n  n: 0\n};\n// interface CutomAction{\n//     type:string,\n//     payload:any\n// }\nconst INCRAEMENT = 'increament';\nconst DECRAEMENT = 'decreament';\nexport function counterReducer(state = initialState, action) {\n  switch (action.type) {\n    case INCRAEMENT:\n      return {\n        n: state.n + action.payload\n      };\n    case DECRAEMENT:\n      return {\n        n: state.n - action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport class Increament {\n  constructor(payload) {\n    this.type = INCRAEMENT;\n    this.payload = payload;\n  }\n}\nexport class Decreament {\n  constructor(payload) {\n    this.type = DECRAEMENT;\n    this.payload = payload;\n  }\n}","map":{"version":3,"mappings":"AAMA,IAAIA,YAAY,GAAG;EACfC,CAAC,EAAE;CACN;AAED;AACA;AACA;AACA;AAEA,MAAMC,UAAU,GAAG,YAAY;AAC/B,MAAMC,UAAU,GAAG,YAAY;AAG/B,OAAM,SAAUC,cAAc,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAW;EAC5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKL,UAAU;MACX,OAAO;QACHD,CAAC,EAAEI,KAAK,CAACJ,CAAC,GAAGK,MAAM,CAACE;OACvB;IACL,KAAKL,UAAU;MACX,OAAO;QACHF,CAAC,EAAEI,KAAK,CAACJ,CAAC,GAAGK,MAAM,CAACE;OACvB;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB;AAEA,OAAM,MAAOI,UAAU;EAInBC,YAAYF,OAAe;IAH3B,SAAI,GAAWN,UAAU;IAIrB,IAAI,CAACM,OAAO,GAAGA,OAAO;EAC1B;;AAGJ,OAAM,MAAOG,UAAU;EAInBD,YAAYF,OAAe;IAH3B,SAAI,GAAWL,UAAU;IAIrB,IAAI,CAACK,OAAO,GAAGA,OAAO;EAC1B","names":["initialState","n","INCRAEMENT","DECRAEMENT","counterReducer","state","action","type","payload","Increament","constructor","Decreament"],"sourceRoot":"","sources":["/Users/akira/Documents/NgRx-Angular-training/src/app/store/reducers/counter.reducer.ts"],"sourcesContent":["\n\nexport interface Counter{\n    n: number\n}\n\nlet initialState = {\n    n: 0\n}\n\n// interface CutomAction{\n//     type:string,\n//     payload:any\n// }\n\nconst INCRAEMENT = 'increament';\nconst DECRAEMENT = 'decreament';\n\n\nexport function counterReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case INCRAEMENT:\n            return {\n                n: state.n + action.payload\n            }\n        case DECRAEMENT:\n            return {\n                n: state.n - action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport class Increament{\n    type: string = INCRAEMENT;\n    payload: number;\n\n    constructor(payload: number){\n        this.payload = payload;\n    }\n}\n\nexport class Decreament{\n    type: string = DECRAEMENT;\n    payload: number;\n\n    constructor(payload: number){\n        this.payload = payload;\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}