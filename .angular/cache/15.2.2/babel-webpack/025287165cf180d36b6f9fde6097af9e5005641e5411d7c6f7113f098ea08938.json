{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { FaildAction, LOAD, SuccessAction } from \"../actions/todos.action\";\nimport { mergeMap, map, catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { select } from \"@ngrx/store\";\nimport { titleSelector } from \"../selectors/todo.selector\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ngrx/effects\";\nexport class TodosEffect {\n  constructor(http, actions) {\n    this.http = http;\n    this.actions = actions;\n    this.todo$ = createEffect(() => this.actions.pipe(ofType(LOAD), mergeMap(() => this.http.get('https://jsonplaceholder.typicode.com/todos').pipe(select(titleSelector), map(data => new SuccessAction(data)), catchError(err => of(new FaildAction(err)))))));\n  }\n}\nTodosEffect.ɵfac = function TodosEffect_Factory(t) {\n  return new (t || TodosEffect)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Actions));\n};\nTodosEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodosEffect,\n  factory: TodosEffect.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,WAAW,EAAEC,IAAI,EAAEC,aAAa,QAAQ,yBAAyB;AAC1E,SAASC,QAAQ,EAAEC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;AAC1D,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,aAAa,QAAQ,4BAA4B;;;;AAG1D,OAAM,MAAOC,WAAW;EAWpBC,YAAoBC,IAAe,EAAUC,OAAgB;IAAzC,SAAI,GAAJD,IAAI;IAAqB,YAAO,GAAPC,OAAO;IATpD,UAAK,GAAGd,YAAY,CAAC,MAAM,IAAI,CAACc,OAAO,CAACC,IAAI,CACxCd,MAAM,CAACE,IAAI,CAAC,EACZE,QAAQ,CAAC,MAAI,IAAI,CAACQ,IAAI,CAACG,GAAG,CAAC,4CAA4C,CAAC,CAACD,IAAI,CACzEN,MAAM,CAACC,aAAa,CAAC,EACrBJ,GAAG,CAAEW,IAAI,IAAI,IAAIb,aAAa,CAACa,IAAI,CAAC,CAAC,EACrCV,UAAU,CAAEW,GAAG,IAAKV,EAAE,CAAC,IAAIN,WAAW,CAACgB,GAAG,CAAC,CAAC,CAAC,CAChD,CAAC,CACL,CAAC;EAIF;;AAbSP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;AAAA","names":["createEffect","ofType","FaildAction","LOAD","SuccessAction","mergeMap","map","catchError","of","select","titleSelector","TodosEffect","constructor","http","actions","pipe","get","data","err","factory"],"sourceRoot":"","sources":["/Users/akira/Documents/NgRx-Angular-training/src/app/store/effects/todo.effect.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { FaildAction, LOAD, SuccessAction } from \"../actions/todos.action\";\nimport { mergeMap, map, catchError } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { select } from \"@ngrx/store\";\nimport { titleSelector } from \"../selectors/todo.selector\";\n\n@Injectable()\nexport class TodosEffect{\n\n    todo$ = createEffect(() => this.actions.pipe(\n        ofType(LOAD),\n        mergeMap(()=>this.http.get('https://jsonplaceholder.typicode.com/todos').pipe(\n            select(titleSelector)\n            map((data)=> new SuccessAction(data)),\n            catchError((err) => of(new FaildAction(err)))\n        ))\n    ))\n\n    constructor(private http:HttpClient, private actions: Actions){\n\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}