{"ast":null,"code":"let initialState = {\n  n: 0\n};\nexport function counterReduser(state = initialState, action) {\n  switch (action.type) {\n    case \"increament\":\n      return {\n        n: state.n + 1\n      };\n    case \"decreament\":\n      return {\n        n: state.n - 1\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"mappings":"AAMA,IAAIA,YAAY,GAAG;EACfC,CAAC,EAAE;CACN;AAGD,OAAM,SAAUC,cAAc,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAc;EAC/D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACb,OAAO;QACHJ,CAAC,EAAEE,KAAK,CAACF,CAAC,GAAG;OAChB;IACL,KAAK,YAAY;MACb,OAAO;QACHA,CAAC,EAAEE,KAAK,CAACF,CAAC,GAAG;OAChB;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB","names":["initialState","n","counterReduser","state","action","type"],"sourceRoot":"","sources":["/Users/akira/Documents/NgRx-Angular-treaning/src/app/store/store.ts"],"sourcesContent":["import { Action } from \"@ngrx/store\";\n\nexport interface StoreInterface{\n    counter\n}\n\nlet initialState = {\n    n: 0\n}\n\n\nexport function counterReduser(state = initialState, action: Action) {\n    switch (action.type) {\n        case \"increament\":\n            return {\n                n: state.n + 1\n            }\n        case \"decreament\":\n            return {\n                n: state.n - 1\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}